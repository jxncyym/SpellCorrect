记录最近一些没有形成系统的思考1、要以结果为导向，不要过多的干涉下属采取的方式和方法，给下属最大的自由权。这样一方面可以发挥下属的主观能动性，另一方面也是对下属的一个极大的锻炼和提高。但是如果下属无法解决问题，方式方法存在重大失误，进度受到严重影响&mdash;&mdash;这个时候管理者应该果断介入。


   2、对下属更多的是影响，而非取代。


   3、为下属做好支持性工作。


   


   如何批评下属。批评之前首先做自我批评。


   


   遇到技术难题，要参与技术攻关，这个时候如果只是关注结果，则可能效果不好。


   


   也就是说，运行正常，不用参与，运行异常，则要适当参与。





最近开发遇到&ldquo;唯一标示&rdquo;发生更改的两个问题，两个问题有点像。


第一个是DHCP下，TG的IP可能会更改（原先认为是不可变的）。影响的对象包括:SUC和tg间，网元代理和SUC间用IP作板卡标识；E1id用到IP地址做前缀。开发的过程中很多地方我们直接将板卡ID认为是IP。这样，万一板卡的标示不用IP了，比如用MAC地址，就要改很多的地方。


第二个是今天的card Id的问题。这个card id SCU和网元代理都要用，用来标识一个板卡。SCU内部把它直接作为数组下标。开过程中，如果card id不再是一个数字，那么作为数组下标应用的地方就要改了。








结论：


1、以后开发中，两个模块间的唯一标识，只能把他作为字符串。不能加任何前置条件，比如，认为标识就是IP，直接拿来当IP用。这样唯一标识一变，要改很多地方。


2、要根据唯一标识来获取其他的信息，比如根据唯一标识来获取IP，即便是唯一标识就是IP，也不要直接当IP拿来用，而是通过中间函数：GetIpById();来获取IP。这个中间层可以隔离一些变化。假如唯一标识变成了mac地址，只要更改这个函数就可以了。其他的地方可以不动。这样变化影响的范围就小了很多。同理，不要直接把card id用作数组下标，而是通过间接层：GetIndexById来获取，万一card id改变了，不可以在做下标，也只更改这个函数就可以了。





总的思路，就是通过增加一个间接层来限制变化带来的影响。





我最近一段时间的执行力有些问题，需要调整一下。





主要的问题在：


1、中间插入一个事务，导致行动中断，中断后没有重新把它拾起来。


2、毅力。








在执行中遇到的问题：


1、过度思考，表现在思考的时间大于执行的时间。


2、没有开始行动。








需要做的：


1、避免过度思考，20%的思考，80%的行动。避免过度计划，能够完成我的计划，不可完成的计划不具有可行性，而且打击积极性。


2、立即开始行动，并且，要做，回顾，改善。


3、把大的事情分解为可以完成的小的事情，并且开始行动。


4、开始做一些简单的事情，这样可以积累自信心，以便于后面去完成更加复杂的任务。


5、设置数量的限制和时间的限制。







无论从宏观上还是微观上，专注都是非常重要的。





宏观的专注，可以使自己在一段的时间内专注于某一领域，而在这一领域取得一定的成绩。





微观的专注，可以在平时的工作中找到一个焦点，提高自己的工作效率。










微观管理





1、开发流程中，缺少一个流程监控者，对流程中必须的步骤和评审进行监控。





2、对人力的详细的计划。目前我们是以宏观的方式进行管理，考虑是否要适当的增加一下微观的管理。