你是优秀程序员吗？原文地址：http://news.cnblogs.com/n/112562/

   投递人 Astar发布于 2011-08-22 10:03评论(7)有1420人阅读 原文链接 [收藏] « »

   　　Are You a Good Programmer?

   　　如果有人要你推荐一名优秀的程序员，你会想到谁？你认为你自己是吗？你的评判标准是什么？

   　　思考了这个问题，我意识到程序员可以以各种方式做到优秀。所以我向你推出“四种类型的优秀程序员”并附上插图。 

   　　哲学家

   　　哲学家喜欢编写定义良好、结构良好的漂亮代码。程序构思好后，哲学家会花大量时间在方案的优雅性、健壮性和灵活性上。一个星期不谈“最佳实践”，哲学家就会觉得浑身不爽。

   　　动力

   　　严密控制带来安全，哲学家的终极动力源于此。组织良好的，可预测的系统，清晰的设计原则是哲学家的理想境界。混乱是绝对不能容忍的。秩序产生美。

   　　超能力

   　　● 能写出超级稳定的代码，稳定到你敢把命压上。

   　　● 凭一人之力就能保持代码的清晰，不管其他团队成员的水平如何。

   　　● 代码的伸缩性好

   　　劣根性

   　　● 自认为总是正确的

   　　● 连80列这种问题也要争论（译者注：老计算机的终端只能显示80列，为了让这些古老的终端阅读方便，写代码一般每行不超过80个字符，但随着显示器越来越大，这个原则变得可有可无）

   　　● 关注测试覆盖率多于关注用户问题

   　　● 没完没了

   　　忌讳

   　　● 空格和Tab混着用

   　　● 不遵守原子提交（译者注：原子提交的意思是，如果解决某个问题所修改的代码包含在多个文件中，那么这些文件需要一次性一起提交，这样可以保证任一时刻代码库的状态都是一致的）

   　　● 给他们报名参加即兴表演 

   　　发明家

   　　发明家的实验室源源不断地出产异想天开的好东西。没人求他们，他们就是自己想做。

   　　动力

   　　发明家的动力来自探索和发明全新的事物。强烈的好奇心促使他们把假设变成现实。

   　　超能力

   　　● 经常发明有用（或者将来有用）的新技术

   　　● 有感染力的狂热

   　　● 让你赞叹：“哇靠，这样玩也行？”

   　　劣根性

   　　● 非我发明症（译者注：是一种文化，指不信任、不使用非自己发明的技术）

   　　忌讳

   　　● 用这句话来打击他们的创意：“这不是工业标准” 

   　　征服者

   　　征服者没有难题。对他们来说，编程只是一场征服之旅，不断去克服各种挑战。征服者很争强好胜，但不一定是和别人争。

   　　动力

   　　题目越难，冲得越猛。

   　　超能力

   　　● 能解决那些不可能解决的问题

   　　● 比激光更敏锐的注意力，比马拉松选手更好的耐力。

   　　● 算法活辞典

   　　劣根性

   　　● 容易化简为繁，因为这样解决起来更爽。

   　　● 永远很无聊

   　　忌讳

   　　● 让他们去做一个CRUD网页应用（译者注：CRUD指Create、Read、Update、Delete，文件系统最基本的操作，这里引申为过分简单的应用）

   　　● 强迫他们只能用命令式编程语言

   　　● 给他们一本“数独”谜题集（译者注：数独是一种填字游戏） 

   　　问题解决者

   

   　　问题解决者是目标驱动的，冷酷的实用主义者。每个有明确定义的问题都会被他解决，诡异地不择手段地解决。

   　　动力

   　　问题解决者的动力来自创造价值，所以他们关注结果多于关注过程。

   　　超能力

   　　● 倾听

   　　● 付诸行动

   　　● 利用技术来解决现实问题，而不是乱上添乱。

   　　劣根性

   　　● 容易激怒纯粹主义程序员

   　　● 机会主义者

   　　忌讳

   　　● 给他们繁忙的工作

   　　● 分配给他们没头没脑的任务

   　　成为一个优秀的程序员

   　　当然，不可能每个程序员都能简单地对号入座。重点是，优秀的途径有很多种。作为一个程序员，这四种人才都需要大力培养。当你面对任何困境，都能找到合适的人来解决，这才是真正的优秀。

6
0

来自: 译言