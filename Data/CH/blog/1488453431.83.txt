性能优化——unix编程艺术学习笔记最有效的优化往往是优化之外的其他事情，比如：清晰干净的设计。

   最有效的优化技术就是不做优化：摩尔定律会进行优化。

   如果确实需要优化，那必须找到真正的瓶颈。可以使用工具。但是有几个问题：

   1、 工具的误差。工具一般要插入代码，而这些代码也要消耗时间。越小的函数，消耗越大。所以还要结合调用次数。

   2、 外部的延迟。比如网络，磁盘，进程调度等因素。一般需要综合多次结果。

   3、 非定域性之害。考虑到缓存，因为指令的记载要比执行花费更多的时间，所以，要保持代码短小简单，这样核心数据结构才会留住最快的缓存中。

   4、 吞吐量和延迟：性能常常受限于I/O以及网络事务。