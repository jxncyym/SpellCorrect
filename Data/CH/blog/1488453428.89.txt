开发工具，重用，可移植性——unix编程艺术学习笔记1 工具：开发的战术
   有几个工具需要关注一下：

   Lex和yacc：这两个工具和DSL相关，我之前考虑过写一个通用的DSL引擎，这两个工具也许是可以使用的。

   另外，Python有它的一个实现叫PLY，也要关注一下。

   它的一个实例：Glade。

   Makefile的自动生成工具：比如atuoconf，imake。
2 重用：论不要重新发明轮子
   避免重新发明轮子的最有效的方面就是借用别人的实现：在Unix上，这不单单只重用代码，更指系统级的重用：程序重用。

   达到重用，一个非常重要的一点就是开源。
3 可移植性：软件可移植性与遵循标准
   Unix程序员更加认同代码是可弃的，这是Unix传统注重模块性的产物，使其在无损失的情况下抛弃和更换系统的各个子部分，补救糟糕的代码和设计比重新开始往往更费时费事。但是，这里有一点：如何确定它就是糟糕的？